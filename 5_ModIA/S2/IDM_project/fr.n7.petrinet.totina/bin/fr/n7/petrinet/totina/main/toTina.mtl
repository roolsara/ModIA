[comment encoding = UTF-8 /]
[module toTina('http://www.example.org/PetriNet')]

[template public PetrINetToTina(aPetrINet : PetrINet)]
[comment @main/]
[file (aPetrINet.name + '.net', false, 'UTF-8')]

net [aPetrINet.name/]

[let places : OrderedSet(Place) = aPetrINet.getPlaces()]
[for (place : Place | places)]
pl [place.name/][if (place.jeton > 0)] ([place.jeton/])[/if]
[/for]
[/let]

[let transitions: OrderedSet(Transition) = aPetrINet.getTransitions()]
[for (transition : Transition | transitions)]
[transition.toTina()/]
[/for]
[/let]

[/file]
[/template]

[query public getPlaces(p: PetrINet) : OrderedSet(Place) = 
    p.petrielement->select(e | e.oclIsTypeOf(Place))
        ->collect(e | e.oclAsType(Place))
        ->asOrderedSet()
/]

[query public getTransitions(p: PetrINet) : OrderedSet(Transition) = 
    p.petrielement->select(e | e.oclIsTypeOf(Transition))
        ->collect(e | e.oclAsType(Transition))
        ->asOrderedSet()
/]
[template public toTina(tr : Transition) post (trim())]tr [tr.name/][if (not tr.intervalle.oclIsUndefined())][if (tr.intervalle.borne_sup = -1)] [ '[' /][tr.intervalle.borne_inf/][ ',w' /][ '[' /][else] [ '[' /][tr.intervalle.borne_inf/][ ',' /][tr.intervalle.borne_sup/][ ']' /][/if][/if] [for (arc: Arc | tr.incoming) separator(' ')][arc.source.name/][if (arc.type = ArcType::read_arc)]?[arc.poids/][elseif (arc.poids > 1)]*[arc.poids/][/if][/for] -> [for (arc: Arc | tr.outgoing) separator(' ')][arc.target.name/][if (arc.type = ArcType::read_arc)]*[arc.poids/][elseif (arc.poids > 1)]*[arc.poids/][/if][/for][/template]
